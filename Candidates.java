/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package evoting1;

import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dell
 */
public class Candidates extends javax.swing.JFrame {

    /**
     * Creates new form Candidates
     */
    public Candidates() {
        initComponents();
        String name="";
        try {

            DefaultTableModel model1 = (DefaultTableModel) headBoy.getModel();
            DefaultTableModel model2 = (DefaultTableModel) headGirl.getModel();
            DefaultTableModel model3 = (DefaultTableModel) cultural.getModel();
            DefaultTableModel model4 = (DefaultTableModel) sports.getModel();

            Class.forName("java.sql.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/skullx", "root", "admin");
            Statement stmt = con.createStatement();
            ResultSet rs;

            String query;

            query = "select *from headboy order by (name);";

            rs = stmt.executeQuery(query);

            while (rs.next()) {
                 name = rs.getString(1);

                model1.addRow(new Object[]{name});
            }

            query = "select *from headgirl order by (name);";

            rs = stmt.executeQuery(query);

            while (rs.next()) {
                 name = rs.getString(1);

                model2.addRow(new Object[]{name});
            }

            query = "select *from cultural order by (name);";

            rs = stmt.executeQuery(query);

            while (rs.next()) {
                name = rs.getString(1);

                model3.addRow(new Object[]{name});
            }

            query = "select *from sports order by (name);";

            rs = stmt.executeQuery(query);

            while (rs.next()) {
                name = rs.getString(1);

                model4.addRow(new Object[]{name});
            }

            con.close();
            stmt.close();
            rs.close();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        headBoy = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        sports = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        headGirl = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        cultural = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        boy = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<String>();
        jComboBox2 = new javax.swing.JComboBox<String>();
        girl = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jComboBox3 = new javax.swing.JComboBox<String>();
        cul = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jComboBox4 = new javax.swing.JComboBox<String>();
        spo = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 0, 0));

        jLabel1.setFont(new java.awt.Font("Snap ITC", 3, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Candidates");

        headBoy.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name"
            }
        ));
        jScrollPane1.setViewportView(headBoy);

        sports.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name"
            }
        ));
        jScrollPane2.setViewportView(sports);

        headGirl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name"
            }
        ));
        jScrollPane3.setViewportView(headGirl);

        cultural.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name"
            }
        ));
        jScrollPane4.setViewportView(cultural);

        jLabel2.setFont(new java.awt.Font("Stencil", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 255, 102));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Head Boy");

        jLabel3.setFont(new java.awt.Font("Stencil", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 255, 102));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Head Girl");

        jLabel4.setFont(new java.awt.Font("Stencil", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 255, 102));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Cultural Captain");

        jLabel5.setFont(new java.awt.Font("Stencil", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 255, 102));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Sports Captain");

        boy.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                boyKeyReleased(evt);
            }
        });

        jButton1.setText("Execute");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Function", "Add", "Delete" }));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Function", "Add", "Delete" }));

        girl.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                girlKeyReleased(evt);
            }
        });

        jButton2.setText("Execute");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Function", "Add", "Delete" }));

        cul.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                culKeyReleased(evt);
            }
        });

        jButton3.setText("Execute");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Function", "Add", "Delete" }));

        spo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                spoKeyReleased(evt);
            }
        });

        jButton4.setText("Execute");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(102, 102, 255));
        jButton5.setFont(new java.awt.Font("Segoe Script", 3, 18)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 0));
        jButton5.setText("Clear All");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(153, 153, 255));
        jButton6.setFont(new java.awt.Font("Script MT Bold", 0, 24)); // NOI18N
        jButton6.setForeground(new java.awt.Color(204, 0, 0));
        jButton6.setText("Tools");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jComboBox1, 0, 79, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(boy, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(64, 64, 64)
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(girl, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(64, 64, 64)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cul, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(spo, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(295, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(boy)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(girl, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cul)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBox4)
                    .addComponent(spo)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(26, 26, 26)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
DefaultTableModel model1 = (DefaultTableModel) headBoy.getModel();

        int a = jComboBox1.getSelectedIndex();
        String name = boy.getText();

        if (a == 0) {
            JOptionPane.showMessageDialog(this, "Please Select a Function", "Info", WIDTH);
        }

        if (a == 1) {
            try {
                Class.forName("java.sql.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/skullx", "root", "admin");
                Statement stmt = con.createStatement();
                String add = "insert into headboy values('" + name.toUpperCase().toUpperCase() + "', '0');";

                stmt.executeUpdate(add);

                con.close();
                stmt.close();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage(), "SQL ERROR", WIDTH);
            }
        }

        if (a == 2) {
            try {
                Class.forName("java.sql.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/skullx", "root", "admin");
                Statement stmt = con.createStatement();
                String delete = "delete from headboy where name = '" + name + "';";

                stmt.executeUpdate(delete);

                con.close();
                stmt.close();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage(), "SQL ERROR", WIDTH);
            }
        }

        model1.setRowCount(0);

        try {

            Class.forName("java.sql.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/skullx", "root", "admin");
            Statement stmt = con.createStatement();
            ResultSet rs;

            String query;

            query = "select *from headboy order by (name);";

            rs = stmt.executeQuery(query);

            while (rs.next()) {
                String names = rs.getString(1);

                model1.addRow(new Object[]{names});
            }

            con.close();
            stmt.close();
            rs.close();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
DefaultTableModel model2 = (DefaultTableModel) headGirl.getModel();

        int a = jComboBox2.getSelectedIndex();
        String name = girl.getText();

        if (a == 0) {
            JOptionPane.showMessageDialog(this, "Please Select a Function", "Info", WIDTH);
        }

        if (a == 1) {
            try {
                Class.forName("java.sql.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/skullx", "root", "admin");
                Statement stmt = con.createStatement();
                String add = "insert into headgirl values('" + name.toUpperCase() + "', '0');";

                stmt.executeUpdate(add);

                con.close();
                stmt.close();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage(), "SQL ERROR", WIDTH);
            }
        }

        if (a == 2) {
            try {
                Class.forName("java.sql.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/skullx", "root", "admin");
                Statement stmt = con.createStatement();
                String delete = "delete from headgirl where name = '" + name + "';";

                stmt.executeUpdate(delete);

                con.close();
                stmt.close();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage(), "SQL ERROR", WIDTH);
            }
        }

        model2.setRowCount(0);

        try {

            Class.forName("java.sql.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/skullx", "root", "admin");
            Statement stmt = con.createStatement();
            ResultSet rs;

            String query;

            query = "select *from headgirl order by (name);";

            rs = stmt.executeQuery(query);

            while (rs.next()) {
                String names = rs.getString(1);

                model2.addRow(new Object[]{names});
            }

            con.close();
            stmt.close();
            rs.close();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
DefaultTableModel model3 = (DefaultTableModel) cultural.getModel();

        int a = jComboBox3.getSelectedIndex();
        String name = cul.getText();

        if (a == 0) {
            JOptionPane.showMessageDialog(this, "Please Select a Function", "Info", WIDTH);
        }

        if (a == 1) {
            try {
                Class.forName("java.sql.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/skullx", "root", "admin");
                Statement stmt = con.createStatement();
                String add = "insert into cultural values('" + name.toUpperCase() + "', '0');";

                stmt.executeUpdate(add);

                con.close();
                stmt.close();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage(), "SQL ERROR", WIDTH);
            }
        }

        if (a == 2) {
            try {
                Class.forName("java.sql.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/skullx", "root", "admin");
                Statement stmt = con.createStatement();
                String delete = "delete from cultural where name = '" + name + "';";

                stmt.executeUpdate(delete);

                con.close();
                stmt.close();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage(), "SQL ERROR", WIDTH);
            }
        }

        model3.setRowCount(0);

        try {

            Class.forName("java.sql.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/skullx", "root", "admin");
            Statement stmt = con.createStatement();
            ResultSet rs;

            String query;

            query = "select *from cultural order by(name);";

            rs = stmt.executeQuery(query);

            while (rs.next()) {
                String names = rs.getString(1);

                model3.addRow(new Object[]{names});
            }

            con.close();
            stmt.close();
            rs.close();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
DefaultTableModel model4 = (DefaultTableModel) sports.getModel();

        int a = jComboBox4.getSelectedIndex();
        String name = spo.getText();

        if (a == 0) {
            JOptionPane.showMessageDialog(this, "Please Select a Function", "Info", WIDTH);
        }

        if (a == 1) {
            try {
                Class.forName("java.sql.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/skullx", "root", "admin");
                Statement stmt = con.createStatement();
                String add = "insert into sports values('" + name.toUpperCase() + "', '0');";

                stmt.executeUpdate(add);

                con.close();
                stmt.close();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage(), "SQL ERROR", WIDTH);
            }
        }

        if (a == 2) {
            try {
                Class.forName("java.sql.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/skullx", "root", "admin");
                Statement stmt = con.createStatement();
                String delete = "delete from sports where name = '" + name + "';";

                stmt.executeUpdate(delete);

                con.close();
                stmt.close();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage(), "SQL ERROR", WIDTH);
            }
        }

        model4.setRowCount(0);

        try {

            Class.forName("java.sql.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/skullx", "root", "admin");
            Statement stmt = con.createStatement();
            ResultSet rs;

            String query;

            query = "select *from sports order by(name);";

            rs = stmt.executeQuery(query);

            while (rs.next()) {
                String names = rs.getString(1);

                model4.addRow(new Object[]{names});
            }

            con.close();
            stmt.close();
            rs.close();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
int a = JOptionPane.showConfirmDialog(this, "Are you sure you want to Clear All Data?", "Confirm", JOptionPane.YES_NO_OPTION);

        if (a == 0) {
            DefaultTableModel model1 = (DefaultTableModel) headBoy.getModel();
            DefaultTableModel model2 = (DefaultTableModel) headGirl.getModel();
            DefaultTableModel model3 = (DefaultTableModel) cultural.getModel();
            DefaultTableModel model4 = (DefaultTableModel) sports.getModel();

            try {
                Class.forName("java.sql.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/skullx", "root", "admin");
                Statement stmt = con.createStatement();

                String query = "Delete from headboy;";

                stmt.execute(query);

                model1.setRowCount(0);

                con.close();
                stmt.close();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage(), "Info", WIDTH);
            }

            try {
                Class.forName("java.sql.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/skullx", "root", "admin");
                Statement stmt = con.createStatement();

                String query = "Delete from headgirl;";

                stmt.execute(query);

                model2.setRowCount(0);

                con.close();
                stmt.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage(), "Info", WIDTH);
            }

            try {
                Class.forName("java.sql.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/skullx", "root", "admin");
                Statement stmt = con.createStatement();

                String query = "Delete from cultural;";

                stmt.execute(query);

                model3.setRowCount(0);

                con.close();
                stmt.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage(), "Info", WIDTH);
            }

            try {
                Class.forName("java.sql.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/skullx", "root", "admin");
                Statement stmt = con.createStatement();

                String query = "Delete from sports;";

                stmt.execute(query);

                model4.setRowCount(0);

                con.close();
                stmt.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage(), "Info", WIDTH);
            }

            JOptionPane.showMessageDialog(this, "Data has been Cleared", "Info", WIDTH);

        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void boyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_boyKeyReleased
if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            boy.selectAll();

            DefaultTableModel model1 = (DefaultTableModel) headBoy.getModel();

            int a = jComboBox1.getSelectedIndex();
            String name = boy.getText();

            if (a == 0) {
                JOptionPane.showMessageDialog(this, "Please Select a Function", "Info", WIDTH);
            }

            if (a == 1) {
                try {
                    Class.forName("java.sql.Driver");
                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost/skullx", "root", "admin");
                    Statement stmt = con.createStatement();
                    String add = "insert into headboy values('" + name.toUpperCase().toUpperCase() + "', '0');";

                    stmt.executeUpdate(add);

                    con.close();
                    stmt.close();

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e.getMessage(), "SQL ERROR", WIDTH);
                }
            }

            if (a == 2) {
                try {
                    Class.forName("java.sql.Driver");
                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost/skullx", "root", "admin");
                    Statement stmt = con.createStatement();
                    String delete = "delete from headboy where name = '" + name + "';";

                    stmt.executeUpdate(delete);

                    con.close();
                    stmt.close();

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e.getMessage(), "SQL ERROR", WIDTH);
                }
            }

            model1.setRowCount(0);

            try {

                Class.forName("java.sql.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/skullx", "root", "admin");
                Statement stmt = con.createStatement();
                ResultSet rs;

                String query;

                query = "select *from headboy order by (name);";

                rs = stmt.executeQuery(query);

                while (rs.next()) {
                    String names = rs.getString(1);

                    model1.addRow(new Object[]{names});
                }

                con.close();
                stmt.close();
                rs.close();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        }
    }//GEN-LAST:event_boyKeyReleased

    private void girlKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_girlKeyReleased
if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            girl.selectAll();

            DefaultTableModel model2 = (DefaultTableModel) headGirl.getModel();

            int a = jComboBox2.getSelectedIndex();
            String name = girl.getText();

            if (a == 0) {
                JOptionPane.showMessageDialog(this, "Please Select a Function", "Info", WIDTH);
            }

            if (a == 1) {
                try {
                    Class.forName("java.sql.Driver");
                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost/skullx", "root", "admin");
                    Statement stmt = con.createStatement();
                    String add = "insert into headgirl values('" + name.toUpperCase() + "', '0');";

                    stmt.executeUpdate(add);

                    con.close();
                    stmt.close();

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e.getMessage(), "SQL ERROR", WIDTH);
                }
            }

            if (a == 2) {
                try {
                    Class.forName("java.sql.Driver");
                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost/skullx", "root", "admin");
                    Statement stmt = con.createStatement();
                    String delete = "delete from headgirl where name = '" + name + "';";

                    stmt.executeUpdate(delete);

                    con.close();
                    stmt.close();

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e.getMessage(), "SQL ERROR", WIDTH);
                }
            }

            model2.setRowCount(0);

            try {

                Class.forName("java.sql.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/skullx", "root", "admin");
                Statement stmt = con.createStatement();
                ResultSet rs;

                String query;

                query = "select *from headgirl order by (name);";

                rs = stmt.executeQuery(query);

                while (rs.next()) {
                    String names = rs.getString(1);

                    model2.addRow(new Object[]{names});
                }

                con.close();
                stmt.close();
                rs.close();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e.getMessage());
            }

        }
    }//GEN-LAST:event_girlKeyReleased

    private void culKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_culKeyReleased
 if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            cul.selectAll();

            DefaultTableModel model3 = (DefaultTableModel) cultural.getModel();

            int a = jComboBox3.getSelectedIndex();
            String name = cul.getText();

            if (a == 0) {
                JOptionPane.showMessageDialog(this, "Please Select a Function", "Info", WIDTH);
            }

            if (a == 1) {
                try {
                    Class.forName("java.sql.Driver");
                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost/skullx", "root", "admin");
                    Statement stmt = con.createStatement();
                    String add = "insert into cultural values('" + name.toUpperCase() + "', '0');";

                    stmt.executeUpdate(add);

                    con.close();
                    stmt.close();

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e.getMessage(), "SQL ERROR", WIDTH);
                }
            }

            if (a == 2) {
                try {
                    Class.forName("java.sql.Driver");
                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost/skullx", "root", "admin");
                    Statement stmt = con.createStatement();
                    String delete = "delete from cultural where name = '" + name + "';";

                    stmt.executeUpdate(delete);

                    con.close();
                    stmt.close();

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e.getMessage(), "SQL ERROR", WIDTH);
                }
            }

            model3.setRowCount(0);

            try {

                Class.forName("java.sql.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/skullx", "root", "admin");
                Statement stmt = con.createStatement();
                ResultSet rs;

                String query;

                query = "select *from cultural order by(name);";

                rs = stmt.executeQuery(query);

                while (rs.next()) {
                    String names = rs.getString(1);

                    model3.addRow(new Object[]{names});
                }

                con.close();
                stmt.close();
                rs.close();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e.getMessage());
            }

        }
    }//GEN-LAST:event_culKeyReleased

    private void spoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_spoKeyReleased
if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            spo.selectAll();

            DefaultTableModel model4 = (DefaultTableModel) sports.getModel();

            int a = jComboBox4.getSelectedIndex();
            String name = spo.getText();

            if (a == 0) {
                JOptionPane.showMessageDialog(this, "Please Select a Function", "Info", WIDTH);
            }

            if (a == 1) {
                try {
                    Class.forName("java.sql.Driver");
                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost/skullx", "root", "admin");
                    Statement stmt = con.createStatement();
                    String add = "insert into sports values('" + name.toUpperCase() + "', '0');";

                    stmt.executeUpdate(add);

                    con.close();
                    stmt.close();

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e.getMessage(), "SQL ERROR", WIDTH);
                }
            }

            if (a == 2) {
                try {
                    Class.forName("java.sql.Driver");
                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost/skullx", "root", "admin");
                    Statement stmt = con.createStatement();
                    String delete = "delete from sports where name = '" + name + "';";

                    stmt.executeUpdate(delete);

                    con.close();
                    stmt.close();

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e.getMessage(), "SQL ERROR", WIDTH);
                }
            }

            model4.setRowCount(0);

            try {

                Class.forName("java.sql.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/skullx", "root", "admin");
                Statement stmt = con.createStatement();
                ResultSet rs;

                String query;

                query = "select *from sports order by(name);";

                rs = stmt.executeQuery(query);

                while (rs.next()) {
                    String names = rs.getString(1);

                    model4.addRow(new Object[]{names});
                }

                con.close();
                stmt.close();
                rs.close();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e.getMessage());
            }

        }
    }//GEN-LAST:event_spoKeyReleased

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
Tools tool = new Tools();
        tool.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
 for(double a=0.0;a<=1.0;a+=0.1){
        String b=a+"F";
        Float f=Float.valueOf(b);
        this.setOpacity(f);
        try{
            Thread.sleep(100);
        }catch(Exception e){
            
        }}
    }//GEN-LAST:event_formWindowActivated

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Candidates.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Candidates.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Candidates.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Candidates.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Candidates().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField boy;
    private javax.swing.JTextField cul;
    private javax.swing.JTable cultural;
    private javax.swing.JTextField girl;
    private javax.swing.JTable headBoy;
    private javax.swing.JTable headGirl;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField spo;
    private javax.swing.JTable sports;
    // End of variables declaration//GEN-END:variables
}
